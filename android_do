#!/bin/bash

#change this to valid ndk path, otherwise it will be downloaded
NDK=/bad/path/to/android-ndk-r10e/
BUILD_PATH=$(pwd)/build_android
#if you have cjdns android app somewhere else then change it
PROJECT_PATH=$BUILD_PATH/cjdns-android
NDK_VERSION="android-ndk-r10e"

case $(uname -s) in
    Darwin)
        TYPE=darwin
        ;;
    Linux)
        TYPE=linux
        ;;
    *)
        TYPE=
        ;;
esac

android_log=android_build_$$.log
enabled_log=${LOG}

mkdir $BUILD_PATH

if [ "$NDK" == "/bad/path/to/android-ndk-r10d/" ]; then
  if [ ! -d $BUILD_PATH/$NDK_VERSION/ ]; then
    echo "NDK path is not specified. Downloading it..."
    cpu_arch="$(uname -m)"
    [[ -z "$cpu_arch" ]] && {
        echo "ERROR: NO CPU ARCHITECTURE DETECTED"
        exit 1
    }
    [[ "$cpu_arch" = "i686" ]] \
        && cpu_arch="x86"

    NDK=$BUILD_PATH/$NDK_VERSION/

    ##SETUP NDK
    cd "$BUILD_PATH"
    if [ ! -d "$NDK" ]; then
          echo "$NDK_VERSION-${TYPE}-${cpu_arch}.tar.bz2"
          [[ -f "$NDK_VERSION-${TYPE}-${cpu_arch}.tar.bz2" ]] \
              || wget "http://dl.google.com/android/ndk/$NDK_VERSION-${TYPE}-${cpu_arch}.bin" \
              || (echo "Can't find download for your system"; exit 1)
          [[ -d "$NDK_VERSION" ]] || (chmod a+x "$NDK_VERSION-${TYPE}-${cpu_arch}.bin"; "./$NDK_VERSION-${TYPE}-${cpu_arch}.bin" || exit 1)
    fi

    [[ ! -d "$NDK" ]] && {
        echo "The NDK variable is not pointing to a valid directory"
        exit 1
    }  
    cd ..
  else
    NDK=$BUILD_PATH/$NDK_VERSION/
  fi
fi

$NDK/build/tools/make-standalone-toolchain.sh --platform=android-21 --toolchain=arm-linux-androideabi-4.9 --install-dir=$BUILD_PATH/arm-linux-androideabi/ --system=${TYPE}-${cpu_arch}

Seccomp_NO=1

CROSS_COMPILE=$BUILD_PATH/arm-${TYPE}-androideabi/bin/arm-${TYPE}-androideabi-
TARGET_ARCH=arm
CC=${CROSS_COMPILE}gcc
AR=${CROSS_COMPILE}ar
RANLIB=${CROSS_COMPILE}ranlib
CFLAGS=${CROSS_CFLAGS}
LDFLAGS=${CROSS_LDFLAGS}
gcc_version=$(${CC} --version)
log_filename="${android_log%.*}"
echo Using $gcc_version

echo Compiler CC: $CC
echo Compiler CFLAGS: $CFLAGS
echo Compiler LDFLAGS: $LDFLAGS

time ./do

if [ -d $ANDROID_HOME ]; then
  ret="0"

  if [ ! -d $PROJECT_PATH ]; then
    git clone https://github.com/hyperboria/android $PROJECT_PATH || ret=$?
  fi

  echo $ret

  if [ "$ret" == "" ] || [ "$ret" == "0" ]; then
    unset ret
    cp cjdroute $PROJECT_PATH/src/main/assets/armeabi-v7a/ || ret=$?

    if [ "$ret" != "" ] && [ "$ret" != "0" ]; then
      echo -e "\e[1;31mCopying failed, non zero status returned - $ret\e[0m"
    else
      echo -e "\e[1;32mCopied successfully\e[0m"

      echo Building android app...
      cd $PROJECT_PATH
      echo "sdk.dir=$ANDROID_HOME" > $PROJECT_PATH/local.properties
      ./gradlew installDebug
    fi
  fi
else
  echo -e "\n\e[1;33mAndroid SDK not found! Export ANDROID_HOME!\e[0m"
fi

echo -e "\n\e[1;34mOutput: $(pwd)/cjdroute\e[0m"

exit $ret
